<!-- Quick View Modal -->
<div id="quick-view-modal" style="display:none;">
    <div class="modal-content">
        <span class="close-button">&times;</span>
        <div id="product-details"></div>
    </div>
</div>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        var quickViewButtons = document.querySelectorAll('.quick-view-button');
        var modal = document.getElementById('quick-view-modal');
        var closeButton = document.querySelector('.close-button');
        var productDetails = document.getElementById('product-details');
    
        quickViewButtons.forEach(function(button) {
            console.log("Hello");
            button.addEventListener('click', function() {
                var productHandle = this.getAttribute('data-product-handle');
                fetchProductDetails(productHandle);
            });
        });
    
        closeButton.addEventListener('click', function() {
            modal.style.display = 'none';
        });
    
        window.addEventListener('click', function(event) {
            if (event.target == modal) {
                modal.style.display = 'none';
            }
        });
    
        function fetchProductDetails(handle) {
            fetch(`/products/${handle}.js`)
                .then(response => response.json())
                .then(product => {
                    displayProductDetails(product);
                    modal.style.display = 'block';
                })
                .catch(error => {
                    console.error('Error fetching product details:', error);
                });
        }
    
        function displayProductDetails(product) {
            let variantsOptionsHtml = product.variants.map(variant => `
                <option value="${variant.id}" data-price="${variant.price / 100}">${variant.title} - $${(variant.price / 100).toFixed(2)}</option>
            `).join('');
    
            productDetails.innerHTML = `
                <h2>${product.title}</h2>
                <p>${product.body_html}</p>
                <img src="${product.images[0]}" alt="${product.title}">
                <form id="add-to-cart-form">
                    <label for="variant">Options:</label>
                    <select id="variant">${variantsOptionsHtml}</select>
                    <label for="quantity">Quantity:</label>
                    <input type="number" id="quantity" name="quantity" value="1" min="1">
                    <button type="submit">Add to Cart</button>
                </form>
                <p>Price: $<span id="product-price">${(product.variants[0].price / 100).toFixed(2)}</span></p>
            `;
    
            document.getElementById('variant').addEventListener('change', function() {
                let selectedOption = this.options[this.selectedIndex];
                let price = selectedOption.getAttribute('data-price');
                document.getElementById('product-price').textContent = parseFloat(price).toFixed(2);
            });
    
            document.getElementById('add-to-cart-form').addEventListener('submit', function(event) {
                event.preventDefault();
                addToCart(product.id);
            });
        }
    
        function addToCart(productId) {
            var form = document.getElementById('add-to-cart-form');
            var variantId = form.variant.value;
            var quantity = form.quantity.value;
    
            fetch('/cart/add.js', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    id: variantId,
                    quantity: quantity
                })
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                alert('Product added to cart!');
                modal.style.display = 'none';
            })
            .catch(error => {
                console.error('Error adding product to cart:', error);
                alert('Failed to add product to cart.');
            });
        }
    });
    

</script>

<style>

    /* Quick View Modal Styling */

/* The Modal (background) */
.product {
    z-index: 2;
    position: relative;
}
#quick-view-modal {
    display: none;
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0,0,0,0.4); /* Black with opacity */
}

/* Modal Content */
.modal-content {
    background-color: #fefefe;
    margin: 15% auto;
    padding: 20px;
    border: 1px solid #888;
    width: 80%;
    max-width: 600px; /* Limit max width for better appearance */
    box-shadow: 0 5px 15px rgba(0,0,0,0.3);
    border-radius: 8px;
    position: relative;
}

/* Close Button */
.close-button {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
}

.close-button:hover,
.close-button:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
}

/* Product Details */
#product-details {
    text-align: left;
}

#product-details h2 {
    font-size: 24px;
    margin-bottom: 10px;
}

#product-details p {
    font-size: 16px;
    margin-bottom: 20px;
}

#product-details img {
    max-width: 100%;
    height: auto;
    margin-bottom: 20px;
    border-radius: 5px;
}

/* Form Styling */
#add-to-cart-form {
    display: flex;
    flex-direction: column;
    gap: 10px;
}

#add-to-cart-form label {
    font-size: 14px;
    margin-bottom: 5px;
}

#add-to-cart-form select,
#add-to-cart-form input[type="number"] {
    padding: 8px;
    font-size: 14px;
    border: 1px solid #ddd;
    border-radius: 4px;
}

#add-to-cart-form button {
    padding: 10px 20px;
    background-color: #28a745;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 16px;
}

#add-to-cart-form button:hover {
    background-color: #218838;
}

#product-price {
    font-weight: bold;
    font-size: 18px;
    color: #333;
}


</style>