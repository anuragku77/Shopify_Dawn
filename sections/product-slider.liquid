<div class = "page-width">    
    <h2>{{ section.settings.title }}</h2>
    <div class = "productcarousel">
        {% assign collection = collections[section.settings.collection] %}
        {%- for product in collection.products -%}
            {% assign lazy_load = false %}
            {%- if forloop.index > 2 -%}
              {%- assign lazy_load = true -%}
            {%- endif -%}
            <li
              class="grid__item{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
              {% if settings.animations_reveal_on_scroll %}
                data-cascade
                style="--animation-order: {{ forloop.index }};"
              {% endif %}
            >
              {% render 'card-product',
                card_product: product,
                media_aspect_ratio: section.settings.image_ratio,
                image_shape: section.settings.image_shape,
                show_secondary_image: section.settings.show_secondary_image,
                show_vendor: section.settings.show_vendor,
                show_rating: section.settings.show_rating,
                lazy_load: lazy_load,
                quick_add: section.settings.quick_add,
                section_id: section.id
              %}
            </li>
          {%- endfor -%}
    </div>
</div>


{% schema %}
{
  "name": "Product Slider",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "inline_richtext",
      "id": "title",
      "default": "Featured collection",
      "label": "t:sections.featured-collection.settings.title.label"
    },
    {
      "type": "collection",
      "id": "collection",
      "label": "t:sections.featured-collection.settings.collection.label"
    }
  ],
  "presets": [
    {
      "name": "Product Slider"
    }
  ]
}
{% endschema %}

<style>
  .page-width {
    max-width: 1200px;
    margin: auto;
    padding: 20px;
  }
  
  .productcarousel {
    display: flex;
    overflow: hidden;
    position: relative;
  }
  
  .productcarousel li {
    min-width: 100%;
    box-sizing: border-box;
    transition: transform 0.5s ease-in-out;
    list-style: none;
  }
  
  .productcarousel .grid__item {
    flex: 1 0 auto;
    margin: 0 10px;
    transition: transform 0.5s;
  }
  
  .productcarousel .prev, .productcarousel .next {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background-color: rgba(0, 0, 0, 0.5);
    color: white;
    border: none;
    padding: 10px;
    cursor: pointer;
    z-index: 1;
  }
  
  .productcarousel .prev {
    left: 10px;
  }
  
  .productcarousel .next {
    right: 10px;
  }
  
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const carousel = document.querySelector('.productcarousel');
    const items = document.querySelectorAll('.productcarousel li');
    const nextButton = document.createElement('button');
    const prevButton = document.createElement('button');
    let currentIndex = 0;
  
    nextButton.classList.add('next');
    prevButton.classList.add('prev');
    nextButton.innerText = 'Next';
    prevButton.innerText = 'Prev';
  
    carousel.appendChild(nextButton);
    carousel.appendChild(prevButton);
  
    function showSlide(index) {
      if (index >= items.length) {
        currentIndex = 0;
      } else if (index < 0) {
        currentIndex = items.length - 1;
      } else {
        currentIndex = index;
      }
  
      const translateX = -currentIndex * 100;
      items.forEach(item => {
        item.style.transform = `translateX(${translateX}%)`;
      });
    }
  
    nextButton.addEventListener('click', () => {
      showSlide(currentIndex + 1);
    });
  
    prevButton.addEventListener('click', () => {
      showSlide(currentIndex - 1);
    });
  
    setInterval(() => {
      showSlide(currentIndex + 1);
    }, 5000); // Change slide every 5 seconds
  });
  
</script>

